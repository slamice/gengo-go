Writing a client library
========================

 I decided to write a client library for [Gengo](www.gengo.com). Gengo already has a few [client libraries](http://developers.gengo.com/client_libraries/). It just sense that since we started writing using Go in production, e should have a client library so other people can fare well with it.

What goes into building a good client library?
==============================================

Naming comes to mind, so does clarity

So you have a few layers:
1. Authentication
2. Calls
- Writing requests
- Handling responses
-- handling errors gracefully

Authentication
--------------

As Gengo [explains](http://developers.gengo.com/v2/authentication/), all authentication must be signed with every request. So we're going to go ahead and make a little struct for this:

struct {
    publickey  string
    privatekey string
    api_url    string
    sandbox    bool
}

And then we're going to try to authenticate.






marshalling + unmarshalling json


